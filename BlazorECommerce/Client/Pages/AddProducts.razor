@page "/manager/addproduct"
@inject IProductService productservice
@inject ICategoryService categoryservice

<h3>Add Product</h3>

<EditForm Model = "product" OnSubmit="HandleSubmit">
     <div>
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="product.Title" class="form-control"></InputText>
    </div>
    <div>
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="product.Description" class="form-control"></InputText>
    </div>
    <div>
        <label for="image">Image</label>
        <InputText id="image" @bind-Value="product.ImageUrl" class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label><br />
        <InputSelect @bind-Value="product.CategoryId" class="form-select">
            @foreach (var categories in categoryservice.Categories)
           {
               <option value="@categories.Id">@categories.Name</option>
           }
        </InputSelect>
    </div>

    <div class ="form-control">
    @foreach (var item in productservice.ProductTypes)
    {
        <input type="checkbox" name="checkbox" @onchange="eventArgs => { CheckboxClicked(item, eventArgs.Value);}"/>@item.Name
        @if (help)
        {
            <label for="price">Price</label>
            <input id="price" type="text" name="text" @bind="productVariant.Price"></input>
            <label for="original-price">Original Price</label>
            <input id="original-price" type="text" name="text" @bind="productVariant.OriginalPrice"></input>
        }
        
    }
    </div>

    <br />
    <button type="submit" class ="button-24">Add</button>
</EditForm>

@code {
    private bool help = false;
    private Product product = new Product();
    private ProductVariant productVariant = new ProductVariant();
    private List<ProductVariant> ProductVariantList = new List<ProductVariant>();
    private List<ProductType> ProductTypesList { get; set; } = new List<ProductType>();
    private DTO_Product_ProductType dto { get; set; } = new DTO_Product_ProductType();
    protected override async Task OnInitializedAsync()
    {
        await categoryservice.GetCategories();
        await productservice.GetProductType();
    }



    void CheckboxClicked(ProductType productType, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            help = true;
            //ne nao contem, adiciona
            if (!ProductTypesList.Contains(productType))
            {
                ProductTypesList.Add(productType);
            }
        }
        else
        {
            //se contem, tira
            if (ProductTypesList.Contains(productType))
            {
                ProductTypesList.Remove(productType);
            }
        }
    }

    async Task HandleSubmit()
    {
        dto.Product = product;
        dto.ProductType = ProductTypesList;
        await productservice.AddProduct(dto);
    }
}
